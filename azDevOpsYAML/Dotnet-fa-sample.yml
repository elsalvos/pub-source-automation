# PowerShell Function App to Windows on Azure
# Build a PowerShell Function App and deploy it to Azure as a Windows function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-powershell

trigger:
- none

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'DevOpsDeploymentSP-Prod' #'a7e34ff7-2ba4-4ae0-b785-911c8c728dbe'
  ResourceGroupName: 'santana-uw2-rg-d'
  location: 'west us 2'
  # Function app name
  functionAppName: 'santaFA-uw2-fa-d'

  # App Plan Name
  aspName: 'santana-uw2-asp-d'
  aspWorkerSize: '1'
  aspSKU: 'S1'

  # Agent VM image name
  vmImageName: 'vs2017-win2016'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)'

stages:
- stage: 
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - powershell: |
        if (Test-Path "extensions.csproj") {
            dotnet build extensions.csproj --output ./$(functionAppName)/bin
        }
      displayName: 'Build extensions'

    - task: CopyFiles@2
      displayName: 'copy template to use'
      inputs:
        SourceFolder: 'armTemplates/wa-fa'
        Contents: 'fa-asp-deploy.json'
        TargetFolder: '$(build.artifactstagingdirectory)'
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: $(workingDirectory)
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(functionAppName).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

#    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  #dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(functionAppName)
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: PowerShell@2
            displayName: 'Find json files'
            inputs:
              targetType: 'inline'
              script: |
                write-host "Getting current location `n"
                Get-Location

                write-host "get json files `n"
                get-childitem -Recurse | select basename,fullname

                write-host "Done running script `n"

          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'DevOpsDeploymentSP-Prod'
              subscriptionId: 'a7e34ff7-2ba4-4ae0-b785-911c8c728dbe'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(ResourceGroupName)'
              location: '$(location)'
              templateLocation: 'Linked artifact'
              csmFile: '**\*.json'
              #'**/fa-deploy.json'
              overrideParameters: '-appName $(functionAppname) -aspName $(aspName) -sku $(aspSKU) -workerSize $(aspWorkerSize) -storageAccountType "Standard_LRS" -location "West US 2"'
              deploymentMode: 'Incremental'
              deploymentOutputs: 'armTemplateOutput'

          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)' #'DevOpsDeploymentSP-Prod'
              appType: 'functionApp'
              appName: '$(functionAppName)'
              package: '$(Pipeline.Workspace)/drop/$(functionAppName).zip'
              deploymentMethod: 'auto'

